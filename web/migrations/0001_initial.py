# Generated by Django 4.2.1 on 2023-07-09 14:48

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AdaBoost",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.CharField(max_length=64)),
                ("contractType", models.CharField(max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="LightGBM",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.TextField(max_length=288)),
                ("contractType", models.CharField(default=0, max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="Permission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=32, verbose_name="权限名称")),
                ("url", models.CharField(max_length=32, verbose_name="权限url")),
            ],
        ),
        migrations.CreateModel(
            name="RF",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.CharField(max_length=256)),
                ("contractType", models.CharField(max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="Smote",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.TextField(max_length=288)),
                ("lType", models.CharField(default=0, max_length=32)),
                ("rType", models.CharField(default=0, max_length=32)),
                ("xType", models.CharField(default=0, max_length=32)),
                ("aType", models.CharField(default=0, max_length=32)),
                ("sType", models.CharField(default=0, max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="SmoteNN",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.TextField(max_length=288)),
                ("lType", models.CharField(default=0, max_length=32)),
                ("rType", models.CharField(default=0, max_length=32)),
                ("xType", models.CharField(default=0, max_length=32)),
                ("aType", models.CharField(default=0, max_length=32)),
                ("sType", models.CharField(default=0, max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="SmoteTT",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.TextField(max_length=288)),
                ("lType", models.CharField(default=0, max_length=32)),
                ("rType", models.CharField(default=0, max_length=32)),
                ("xType", models.CharField(default=0, max_length=32)),
                ("aType", models.CharField(default=0, max_length=32)),
                ("sType", models.CharField(default=0, max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="SVM",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.CharField(max_length=64)),
                ("contractType", models.CharField(max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="XGBoost",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("contractName", models.CharField(default="默认值", max_length=32)),
                ("byteCodes", models.TextField(max_length=64)),
                ("contractType", models.CharField(max_length=32)),
                ("create_time", models.CharField(max_length=32)),
            ],
            options={"ordering": ("create_time",),},
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=32, verbose_name="身份名称")),
                ("permissions", models.ManyToManyField(to="web.permission")),
            ],
        ),
        migrations.CreateModel(
            name="Users",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("username", models.CharField(max_length=25, unique=True)),
                ("password", models.CharField(max_length=25)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                ("roles", models.ManyToManyField(to="web.role")),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[("objects", django.contrib.auth.models.UserManager()),],
        ),
    ]
